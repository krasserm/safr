<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:sec="http://safr.sourceforge.net/schema/core"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://safr.sourceforge.net/schema/core 
http://safr.sourceforge.net/schema/core/spring-safr-core-1.0.xsd">

  <!-- ================================================================= -->
  <!--  Security Setup                                                   -->
  <!-- ================================================================= -->

    <!-- 
        Supported attributes of <sec:annotation-driven /> are:
        - access-manager       default="accessManager"
        - crypto-manager       default=""
        - proxy-target-class   default="false"
        - interceptor-order    default="0"
        - support-aspectj      default="true"
     -->
    <sec:annotation-driven access-manager="" crypto-provider="cryptoProvider" />
    
    <bean id="cryptoProvider" class="net.sourceforge.safr.crypto.impl.CryptoProviderImpl">
        <property name="secret" value="sample" />
    </bean>

  <!-- ================================================================= -->
  <!--  Application Setup                                                -->
  <!-- ================================================================= -->

  <bean id="customerService" 
    class="net.sourceforge.safr.sample.crypto.service.CustomerServiceImpl">
    <property name="customerDao" ref="customerDao" />
  </bean>
  
  <bean id="customerDao" 
    class="net.sourceforge.safr.sample.crypto.dao.CustomerDaoImpl">
    <property name="hibernateTemplate" ref="hibernateTemplate" />
  </bean>
  
  <!-- ================================================================= -->
  <!--  System Setup                                                     -->
  <!-- ================================================================= -->

  <bean id="hibernateTransactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>

  <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="/hibernate.xml"/>
    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
        <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
        <prop key="hibernate.show_sql">false</prop>
        <prop key="hibernate.format_sql">false</prop>
      </props>
    </property>    
  </bean>

  <bean id="hibernateTemplate"
    class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean id="dataSource" class="org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource">
    <property name="databaseName" value="target/sample"/>
    <property name="createDatabase" value="create"/>
  </bean>

</beans>
